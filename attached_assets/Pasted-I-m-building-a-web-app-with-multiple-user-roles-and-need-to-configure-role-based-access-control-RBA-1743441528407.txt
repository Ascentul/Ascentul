I'm building a web app with multiple user roles and need to configure role-based access control (RBAC) with separate dashboard environments. The app includes a career-focused frontend and a backend admin system.
🔐 User Roles & Access Rules:
1. Career App User

Can only access their own account and the Career App
Should be routed to /career-dashboard on login
Cannot access University Edition features or backend environments
2. University Edition User

Can access the Career App and University Edition
Should be routed to /university-dashboard on login
Can only access their own data and university-provided modules
3. Staff User

Can only access the Staff Backend Dashboard
Should be routed to /staff-dashboard on login
Has limited backend permissions (read-only or specific tools)
Cannot access the System Admin Dashboard
4. System Administrator (Admin)

Has access to both:
/staff-dashboard (Staff Backend Dashboard)
/admin-dashboard (System Admin Dashboard)
Can view and manage staff users
Can create new staff users (no other role can do this)
🧭 Routing Requirements:
Use role-based login redirects:
Career App User → /career-dashboard
University Edition User → /university-dashboard
Staff User → /staff-dashboard
System Admin → /admin-dashboard and optionally /staff-dashboard
👥 Staff User Management:
Exists inside the Staff Dashboard (/staff-dashboard)
Only System Admins can:
See the “Add New Staff” button/form
Create new staff accounts
Staff users can view a list of users but cannot edit/create/delete
🛠 Tech Stack Notes:
Role-based access control should be enforced on both frontend (route guards, UI logic) and backend (authorization rules)
User roles should be defined in a secure, scalable format (e.g., Supabase RLS, Firebase custom claims, database enum field)
Each dashboard or app section should be modularized by role access
Pages must protect sensitive content from unauthorized users even if direct URLs are accessed
Please configure the system to follow this access logic with secure routing, protected endpoints, and a scalable dashboard structure.